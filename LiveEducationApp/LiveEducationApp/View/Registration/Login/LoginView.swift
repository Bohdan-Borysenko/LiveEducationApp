//
//  LoginView.swift
//  LiveEducationApp
//
//  Created by Bohdan Borysenko on 11.04.2025.
//

import Foundation
import SwiftUI

struct LoginView: View {
    @State private var email: String = ""
    @State private var password: String = ""
    @Binding var showSignUp: Bool
    @Binding var isAuthenticated: Bool
    @EnvironmentObject var authVM: AuthViewModel
    
    var body: some View {
        VStack(spacing: 24) {
            Spacer().frame(height: 40)

            // –õ–æ–≥–æ—Ç–∏–ø
            Image("Logo")
                .resizable()
                .scaledToFit()
                .frame(width: 80, height: 80)
                .padding(.bottom, 30)

            // –ü–æ–ª—è –≤–≤–æ–¥–∞
            VStack(spacing: 16) {
                CustomInputField(placeholder: "Email", data: $email)
                CustomPasswordField(placeholder: "Password", data: $password)
            }

            // –û—à–∏–±–∫–∞
            if let error = authVM.errorMessage {
                Text(error)
                    .foregroundColor(.red)
                    .font(.caption)
                    .multilineTextAlignment(.center)
                    .padding(.top, 5)
            }

            // –ö–Ω–æ–ø–∫–∞ –≤—Ö–æ–¥–∞
            // –ö–Ω–æ–ø–∫–∞ –≤—Ö–æ–¥–∞
            Button(action: {
                authVM.signIn(email: email, password: password) { result in
                    switch result {
                    case .success:
                        print("‚úÖ –í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω")
                        isAuthenticated = true // üëâ –î–æ–±–∞–≤—å –≠–¢–û
                    case .failure(let error):
                        print("‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: \(error.localizedDescription)")
                    }
                }
            }) {
                Text("Log in")
                    .foregroundColor(.white)
                    .frame(maxWidth: .infinity)
                    .padding()
                    .background(Color("PrimaryRed"))
                    .cornerRadius(8)
            }

            // –ó–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å
            Button(action: {}) {
                Text("Forgot Password?")
                    .font(.footnote)
                    .foregroundColor(.blue)
            }

            // –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
            HStack {
                Rectangle().frame(height: 1).foregroundColor(.gray.opacity(0.3))
                Text("or").foregroundColor(.gray)
                Rectangle().frame(height: 1).foregroundColor(.gray.opacity(0.3))
            }

            // –°–æ—Ü. –∫–Ω–æ–ø–∫–∏
            SocialLoginButton(image: "facebook", text: "Log in with Facebook", bgColor: .blue, textColor: .white)
            SocialLoginButton(image: "google", text: "Log in with Google", bgColor: .white, textColor: .black)

            // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
            HStack {
                Text("Don't have an account?")
                Button("Sign Up") {
                    showSignUp = true
                }.foregroundColor(.blue)
            }
            .font(.footnote)
            .padding(.top, 90)

            Spacer()
        }
        .padding()
    }
}

#Preview {
    LoginView(showSignUp: .constant(false), isAuthenticated: .constant(false))
        .environmentObject(AuthViewModel())
}
